cmake_minimum_required(VERSION 3.15)
project(miniocpp VERSION 0.0.1 LANGUAGES CXX)

set(CMAKE_CXX_STANDARD 11)

option(BUILD_MAIN "Build main executable" OFF)

find_package(CURL REQUIRED)
if(CURL_FOUND)
  message(STATUS "Found CURL version: ${CURL_VERSION_STRING}")
  message(STATUS "Using CURL include dir(s): ${CURL_INCLUDE_DIRS}")
  message(STATUS "Using CURL lib(s): ${CURL_LIBRARIES}")
else()
  message(FATAL_ERROR "Could not find CURL")
endif()

find_package(OpenSSL REQUIRED)
if(OPENSSL_FOUND)
    message(STATUS "Found OpenSSL version: ${OPENSSL_VERSION}")
    message(STATUS "Using OpenSSL include dir(s): ${OPENSSL_INCLUDE_DIR}")
    message(STATUS "Using OpenSSL lib(s): ${OPENSSL_LIBRARIES}")
else()
    message(FATAL_ERROR "Could not find OpenSSL")
endif()

include_directories(include ${CURL_INCLUDE_DIRS} ${OPENSSL_INCLUDE_DIR})

add_library(miniocpp SHARED src/minio_client.cpp src/http_client.cpp src/ilogger.cpp)
target_link_libraries(miniocpp ${CURL_LIBRARIES} OpenSSL::SSL OpenSSL::Crypto)

if(BUILD_MAIN)
    add_executable(main main.cpp)
    target_link_libraries(main miniocpp)
endif()